{"version":3,"file":"life.js","sources":["pages/life/life.vue","C:/Users/希希/Documents/HBuilderX.4.24.2024072208/HBuilderX/plugins/uniapp-cli-vite/uniPage:/cGFnZXMvbGlmZS9saWZlLnZ1ZQ"],"sourcesContent":["<template>\n  <view class=\"life-container\">\n    <!-- 头部组件 -->\n    <LifeHeader \n      :activeTab=\"activeTab\" \n      @switchTab=\"switchTab\" \n      @showPublishDialog=\"showPublishDialog\"\n    />\n    \n    <!-- 内容区域（根据标签切换） -->\n    <view class=\"content-section\">\n      <PublicPosts \n        v-if=\"activeTab === 'public'\" \n        :posts=\"publicPosts\" \n        @toggleLike=\"toggleLike\"\n        @showComments=\"showComments\"\n        @sharePost=\"sharePost\"\n      />\n      \n      <PrivateDiaries \n        v-else-if=\"activeTab === 'private'\" \n        :diaries=\"privateDiaries\" \n        @showDiaryDialog=\"showDiaryDialog\"\n        :getMoodEmoji=\"getMoodEmoji\"\n      />\n      \n      <TodaySchedule \n        v-else-if=\"activeTab === 'schedule'\" \n        :scheduleList=\"todaySchedule\" \n        @toggleSchedule=\"toggleSchedule\"\n        @showScheduleDialog=\"showScheduleDialog\"\n      />\n    </view>\n    \n    <!-- 弹窗组件 -->\n    <PublishModal \n      v-if=\"showPublish\" \n      :newPost=\"newPost\" \n      @hidePublishDialog=\"hidePublishDialog\"\n      @publishPost=\"publishPost\"\n    />\n    \n    <DiaryModal \n      v-if=\"showDiary\" \n      :newDiary=\"newDiary\" \n      :moodOptions=\"moodOptions\"\n      @hideDiaryDialog=\"hideDiaryDialog\"\n      @saveDiary=\"saveDiary\"\n    />\n    \n    <ScheduleModal \n      v-if=\"showSchedule\" \n      :newSchedule=\"newSchedule\" \n      @hideScheduleDialog=\"hideScheduleDialog\"\n      @saveSchedule=\"saveSchedule\"\n    />\n  </view>\n</template>\n\n<script setup>\nimport { ref, reactive ,onMounted} from 'vue'\nimport LifeHeader from './components/LifeHeader.vue'\nimport PublicPosts from './components/PublicPosts.vue'\nimport PrivateDiaries from './components/PrivateDiaries.vue'\nimport TodaySchedule from './components/TodaySchedule.vue'\nimport PublishModal from './components/PublishModal.vue'\nimport DiaryModal from './components/DiaryModal.vue'\nimport ScheduleModal from './components/ScheduleModal.vue'\r\nimport request from '@/utils/request'\n\n// 状态管理\nconst activeTab = ref('public')\nconst showPublish = ref(false)\nconst showDiary = ref(false)\nconst showSchedule = ref(false)\nconst loading  = ref(false)\n// 数据存储\nconst publicPosts = ref([])\n\nconst privateDiaries = ref([\n  // {\n  //   id: '1',\n  //   date: '2024-01-15',\n  //   title: '美好的一天',\n  //   content: '今天心情特别好，完成了很多事情。和朋友聊天很开心，感觉生活充满了希望。',\n  //   mood: 'happy',\n  //   tags: ['朋友', '开心', '充实']\n  // },\n  // {\n  //   id: '2',\n  //   date: '2024-01-14',\n  //   title: '平静的思考',\n  //   content: '今天工作比较忙，但晚上有时间静下来思考一些事情。生活需要平衡。',\n  //   mood: 'neutral',\n  //   tags: ['工作', '平衡', '思考']\n  // }\n])\n\nconst todaySchedule = ref([\n  // { id: '1', time: '09:00', title: '晨间瑜伽', completed: true },\n  // { id: '2', time: '10:30', title: '团队会议', completed: true },\n  // { id: '3', time: '14:00', title: '和朋友喝咖啡', completed: false },\n  // { id: '4', time: '19:00', title: '阅读时间', completed: false }\n])\n\n// 表单数据\nconst newPost = reactive({ content: '', isPublic: true })\nconst newDiary = reactive({ title: '', content: '', mood: 'happy', tags: '' })\nconst newSchedule = reactive({ time: '', title: '' })\nconst moodOptions = [\n  { value: 'happy', emoji: '😊' ,emojiIcon:'icon-a-smile'},\n  { value: 'love', emoji: '❤️',emojiIcon: 'icon-a-smile'},\n  { value: 'angry', emoji: '😐' ,emojiIcon:'icon-a-angry'},\n  { value: 'sad', emoji: '😢' ,emojiIcon:'icon-a-cry'}\n]\n\n// 方法\nconst switchTab = (tab) => {\r\n\tactiveTab.value = tab\r\n\tswitch (tab){\r\n\t\tcase 'public':\r\n\t\tgetPublicPosts(1)\r\n\t\t\tbreak;\r\n\t\tcase 'private':\r\n\t\tgetPrivateDiaries(1)\r\n\t\t\tbreak;\r\n\t\tcase 'schedule':\r\n\t\t  getTodaySchedules(1)\r\n\t\t  \tbreak;\r\n\t\tdefault:\r\n\t\t\tbreak;\r\n\t}\r\n}\n\n// 弹窗控制\nconst showPublishDialog = () => showPublish.value = true\nconst hidePublishDialog = () => { showPublish.value = false; newPost.content = '' }\nconst showDiaryDialog = () => showDiary.value = true\nconst hideDiaryDialog = () => { showDiary.value = false; Object.assign(newDiary, { title: '', content: '', mood: 'happy', tags: '' }) }\nconst showScheduleDialog = () => showSchedule.value = true\nconst hideScheduleDialog = () => { showSchedule.value = false; Object.assign(newSchedule, { time: '', title: '' }) }\r\n// 初始化时获取第一页数据\nonMounted(() => {\n  getPublicPosts(1) // 加载第一页getPrivateDiaries(1)\n})\r\n//获取生活动态列表\r\nconst total = ref(0)\nconst getPublicPosts = async(currentPage) => {\n  try {\r\n\tconst params = {\r\n\t\tpage:currentPage,\r\n\t\tsize:10\r\n\t}\r\n  \tconst res = await request.get('/api/v1/life/posts', {params:params})\r\n\t\r\n\tif(res.code===200){\r\n\t  publicPosts.value  = res.data.posts // 更新帖子列表\r\n\t  total.value = res.data.total // 更新总条数\r\n\t\t\r\n\t}else{\r\n\t\tuni.showToast({\r\n\t\t\ttitle:'获取数据失败'\r\n\t\t})\r\n\t}\r\n  } catch (error) {\r\n  \tuni.showToast({ title: '网络错误', icon: 'none' })\r\n  }\n}\n// 数据操作\nconst publishPost = async() => {\n  if (!newPost.content.trim()) return wx.showToast({ title: '请输入内容', icon: 'none' })\r\n  const params = {\n    id: Date.now().toString(),\n    author: '我',\n    avatar: 'https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=60&h=60&fit=crop&crop=face',\n    content: newPost.content,\n    timestamp: '刚刚',\n    likes: 0,\n    comments: 0,\n    isLiked: false\n  }\r\n  const res = await request.post('/api/v1/life/posts', params)\n  hidePublishDialog()\n  wx.showToast({ title: '发布成功', icon: 'success' })\r\n  //刷新发布列表数据\r\n  getPublicPosts()\n}\nconst getPrivateDiaries  = async(currentPage) => {\n  try {\r\n\tconst params = {\r\n\t\tpage:currentPage,\r\n\t\tsize:10\r\n\t}\r\n  \tconst res = await request.get('/api/v1/life/diaries', {params:params})\r\n\t\r\n\tif(res.code===200){\r\n\t  privateDiaries.value  = res.data.diaries // 更新帖子列表\r\n\t}else{\r\n\t\tuni.showToast({\r\n\t\t\ttitle:'获取数据失败'\r\n\t\t})\r\n\t}\r\n  } catch (error) {\r\n  \tuni.showToast({ title: '网络错误', icon: 'none' })\r\n  }\n}\nconst saveDiary = async() => {\n  if (!newDiary.title.trim() || !newDiary.content.trim()) return wx.showToast({ title: '请填写标题和内容', icon: 'none' })\n  const params = {\n    id: Date.now().toString(),\n    date: new Date().toISOString().split('T')[0],\n    ...newDiary,\n    tags: newDiary.tags//newDiary.tags.split(',').map(tag => tag.trim()).filter(tag => tag)\n  }\r\n  // const params =  \r\n  // {\r\n  //   id: '2',\r\n  //   date: '2024-01-14',\r\n  //   title: '平静的思考',\r\n  //   content: '今天工作比较忙，但晚上有时间静下来思考一些事情。生活需要平衡。',\r\n  //   mood: 'neutral',\r\n  //   tags: \"工作, 平衡, 思考\"\r\n  // }\r\n  const res = await request.post('/api/v1/life/diaries',params)\n  hideDiaryDialog()\n  wx.showToast({ title: '保存成功', icon: 'success' })\r\n  getPrivateDiaries()\n}\n//获取今日行程列表\r\nconst getTodaySchedules  = async(currentPage) => {\n  try {\r\n\tconst params = {\r\n\t\tpage:currentPage,\r\n\t\tsize:10\r\n\t}\r\n  \tconst res = await request.get('/api/v1/life/schedules', {params:params})\r\n\t\r\n\tif(res.code===200){\r\n\t  todaySchedule.value  = res.data.schedules // 更新帖子列表\r\n\t}else{\r\n\t\tuni.showToast({\r\n\t\t\ttitle:'获取数据失败'\r\n\t\t})\r\n\t}\r\n  } catch (error) {\r\n  \tuni.showToast({ title: '网络错误', icon: 'none' })\r\n  }\n}\nconst saveSchedule = async() => {\n  if (!newSchedule.time.trim() || !newSchedule.title.trim()) return wx.showToast({ title: '请填写时间和事项', icon: 'none' })\r\n  const params = { ...newSchedule, id: Date.now().toString(), completed: false }\r\n  const res = await request.post('/api/v1/life/schedules',params)\n  // todaySchedule.value.push({ ...newSchedule, id: Date.now().toString(), completed: false })\n  // todaySchedule.value.sort((a, b) => a.time.localeCompare(b.time)) //排序\n  hideScheduleDialog()\n  wx.showToast({ title: '添加成功', icon: 'success' })\r\n  getTodaySchedules()\n}\n\n// 交互操作\nconst toggleLike = (postId) => {\n  const post = publicPosts.value.find(p => p.id === postId)\n  if (post) {\n    post.isLiked = !post.isLiked\n    post.likes += post.isLiked ? 1 : -1\n  }\n}\n\nconst toggleSchedule = async(scheduleId) => {\n  try {\n    // 查找对应的行程项\n    const item = todaySchedule.value.find(s => s.id === scheduleId);\n    if (!item) {\n      console.error('未找到对应的行程项');\n      uni.showToast({ title: '数据异常', icon: 'none' });\n      return;\n    }\n\n    // 保存原始状态用于错误回滚\n    const originalCompleted = item.completed;\n    // 显示加载状态\n    item.loading = true;\n\n    // 关键修改：后端接口路径包含/complete后缀\n    const res = await request.put(`/api/v1/life/schedules/${scheduleId}/complete`);\n\n    // 处理响应\n    if (res && res.code === 200) {\n      // 使用后端返回的状态更新本地\n      item.completed = res.data.completed;\n      uni.showToast({ title: '更新成功', icon: 'success' });\n    } else {\n      // 响应异常时回滚状态\n      item.completed = originalCompleted;\n      uni.showToast({ \n        title: res?.message || '更新失败', \n        icon: 'none' \n      });\n    }\n  } catch (error) {\n    // 网络错误处理\n    const item = todaySchedule.value.find(s => s.id === scheduleId);\n    if (item) {\n      // 回滚状态\n      item.completed = !item.completed;\n      item.loading = false;\n    }\n    \n    // 错误提示细化\n    let errorMsg = '网络异常，请稍后重试';\n    if (error.message.includes('404')) {\n      errorMsg = '接口不存在';\n    } else if (error.message.includes('401')) {\n      errorMsg = '请先登录';\n    } else if (error.message.includes('500')) {\n      errorMsg = '服务器错误';\n    }\n    \n    uni.showToast({ title: errorMsg, icon: 'none' });\n    console.error('切换行程状态失败:', error);\n  } finally {\n    // 确保加载状态关闭\n    const item = todaySchedule.value.find(s => s.id === scheduleId);\n    if (item) {\n      item.loading = false;\n    }\n  }\n};\n    \nconst getMoodEmoji = (mood) => {\n  const option = moodOptions.find(o => o.value === mood)\n  return option ? option.emojiIcon : 'icon-a-smile'\n}\n\n// 预留方法\nconst showComments = (postId) => console.log('查看评论:', postId)\nconst sharePost = (postId) => console.log('分享动态:', postId)\n</script>\n\n<style lang=\"scss\" scoped>\n.life-container {\n  min-height: 100vh;\n  background: linear-gradient(135deg, #e3f2fd 0%, #ffffff 50%, #f3e5f5 100%);\n}\n.content-section {\n  padding: 32rpx 48rpx 160rpx;\n  // margin-top: -32rpx;\n}\n</style>","import MiniProgramPage from 'D:/uniapp/my-lifeRecord/pages/life/life.vue'\nwx.createPage(MiniProgramPage)"],"names":["ref","reactive","onMounted","request","uni","wx"],"mappings":"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"}