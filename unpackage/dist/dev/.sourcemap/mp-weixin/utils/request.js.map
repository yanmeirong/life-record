{"version":3,"file":"request.js","sources":["utils/request.js"],"sourcesContent":["const baseURL = 'http://127.0.0.1:5000'  // 你的后端接口地址\n\nclass Request {\n  constructor() {\n    this.baseURL = baseURL\n    this.timeout = 10000\n  }\n\n  // 获取本地存储的token\n  getToken() {\n    // 从本地存储中获取token（与登录时保存的键名一致）\n    return uni.getStorageSync('token') || ''\n  }\n\n  request(options) {\n    // 获取token\n    const token = this.getToken()\n    \n    // 构建请求头，默认包含Content-Type和认证信息\n    const headers = {\n      'Content-Type': 'application/json',\n      // 如果有token，添加到Authorization头（JWT标准格式）\n      ...(token ? { 'Authorization': `Bearer ${token}` } : {}),\n      // 允许外部传入的header覆盖默认值\n      ...options.header\n    }\n\n    return new Promise((resolve, reject) => {\n      uni.showLoading({\n        title: '加载中...',\n        mask: true\n      })\n\n      uni.request({\n        url: this.baseURL + options.url,\n        method: options.method || 'GET',\n        data: options.data || {},\n        header: headers,  // 使用构建好的请求头\n        timeout: this.timeout,\n        success: (res) => {\n          uni.hideLoading()\n          \n          // 处理token过期的情况（后端返回401状态码）\n          if (res.statusCode === 401) {\n            // 清除无效的token\n            uni.removeStorageSync('token')\n            // 提示用户重新登录\n            uni.showToast({\n              title: '登录已过期，请重新登录',\n              icon: 'none'\n            })\n            // 跳转到登录页\n            setTimeout(() => {\n              uni.navigateTo({ url: '/pages/login/login' })\n            }, 1500)\n            reject('token已过期')\n            return\n          }\n\n          if (res.statusCode === 200) {\n            resolve(res.data)\n          } else {\n            reject(res)\n            uni.showToast({\n              title: res.data?.message || '请求失败',\n              icon: 'none'\n            })\n          }\n        },\n        fail: (error) => {\n          uni.hideLoading()\n          reject(error)\n          uni.showToast({\n            title: '网络异常，请检查连接',\n            icon: 'none'\n          })\n        }\n      })\n    })\n  }\n\n  // 以下方法保持不变\n  get(url, data, header) {\n    return this.request({ url, method: 'GET', data, header })\n  }\n\n  post(url, data, header) {\n    return this.request({ url, method: 'POST', data, header })\n  }\n\n  put(url, data, header) {\n    return this.request({ url, method: 'PUT', data, header })\n  }\n\n  delete(url, data, header) {\n    return this.request({ url, method: 'DELETE', data, header })\n  }\n}\n\nexport default new Request()"],"names":["uni"],"mappings":";;AAAA,MAAM,UAAU;AAEhB,MAAM,QAAQ;AAAA,EACZ,cAAc;AACZ,SAAK,UAAU;AACf,SAAK,UAAU;AAAA,EAChB;AAAA;AAAA,EAGD,WAAW;AAET,WAAOA,oBAAI,eAAe,OAAO,KAAK;AAAA,EACvC;AAAA,EAED,QAAQ,SAAS;AAEf,UAAM,QAAQ,KAAK,SAAU;AAG7B,UAAM,UAAU;AAAA,MACd,gBAAgB;AAAA;AAAA,MAEhB,GAAI,QAAQ,EAAE,iBAAiB,UAAU,KAAK,GAAE,IAAK,CAAE;AAAA;AAAA,MAEvD,GAAG,QAAQ;AAAA,IACZ;AAED,WAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACtCA,oBAAAA,MAAI,YAAY;AAAA,QACd,OAAO;AAAA,QACP,MAAM;AAAA,MACd,CAAO;AAEDA,oBAAAA,MAAI,QAAQ;AAAA,QACV,KAAK,KAAK,UAAU,QAAQ;AAAA,QAC5B,QAAQ,QAAQ,UAAU;AAAA,QAC1B,MAAM,QAAQ,QAAQ,CAAE;AAAA,QACxB,QAAQ;AAAA;AAAA,QACR,SAAS,KAAK;AAAA,QACd,SAAS,CAAC,QAAQ;;AAChBA,wBAAAA,MAAI,YAAa;AAGjB,cAAI,IAAI,eAAe,KAAK;AAE1BA,0BAAG,MAAC,kBAAkB,OAAO;AAE7BA,0BAAAA,MAAI,UAAU;AAAA,cACZ,OAAO;AAAA,cACP,MAAM;AAAA,YACpB,CAAa;AAED,uBAAW,MAAM;AACfA,4BAAAA,MAAI,WAAW,EAAE,KAAK,qBAAoB,CAAE;AAAA,YAC7C,GAAE,IAAI;AACP,mBAAO,UAAU;AACjB;AAAA,UACD;AAED,cAAI,IAAI,eAAe,KAAK;AAC1B,oBAAQ,IAAI,IAAI;AAAA,UAC5B,OAAiB;AACL,mBAAO,GAAG;AACVA,0BAAAA,MAAI,UAAU;AAAA,cACZ,SAAO,SAAI,SAAJ,mBAAU,YAAW;AAAA,cAC5B,MAAM;AAAA,YACpB,CAAa;AAAA,UACF;AAAA,QACF;AAAA,QACD,MAAM,CAAC,UAAU;AACfA,wBAAAA,MAAI,YAAa;AACjB,iBAAO,KAAK;AACZA,wBAAAA,MAAI,UAAU;AAAA,YACZ,OAAO;AAAA,YACP,MAAM;AAAA,UAClB,CAAW;AAAA,QACF;AAAA,MACT,CAAO;AAAA,IACP,CAAK;AAAA,EACF;AAAA;AAAA,EAGD,IAAI,KAAK,MAAM,QAAQ;AACrB,WAAO,KAAK,QAAQ,EAAE,KAAK,QAAQ,OAAO,MAAM,QAAQ;AAAA,EACzD;AAAA,EAED,KAAK,KAAK,MAAM,QAAQ;AACtB,WAAO,KAAK,QAAQ,EAAE,KAAK,QAAQ,QAAQ,MAAM,QAAQ;AAAA,EAC1D;AAAA,EAED,IAAI,KAAK,MAAM,QAAQ;AACrB,WAAO,KAAK,QAAQ,EAAE,KAAK,QAAQ,OAAO,MAAM,QAAQ;AAAA,EACzD;AAAA,EAED,OAAO,KAAK,MAAM,QAAQ;AACxB,WAAO,KAAK,QAAQ,EAAE,KAAK,QAAQ,UAAU,MAAM,QAAQ;AAAA,EAC5D;AACH;AAEA,MAAA,UAAe,IAAI,QAAO;;"}